Note:
git init (to get started)
git status (to find out the status)

Q: What happens when you initialize a repository? Why do you need to do it?

A: Directory .git is created and the status of tracking your files is created inside that dir

Q: How is the staging area different from the working directory and
the repository? What value do you think it offers?  

A: Staging area shows you what will end up in the repository. It is
flagged as going in but not in the respository yet. It shows intention but
doesn't force you to put it there yet. Shows an intended action.

Q: How can you use the staging area to make sure you have one commit
per logical change?

A: ?

Q: What are some situations when branches would be helpful in keeping
your history organized? How would branches help?
A: branch names would indicate the logical ideas you had around making the changes

Q: How do the diagrams help you visualize the branch structure?
A: You can clearly see which commits are part of which branches

Q:What is the result of merging two branches together? Why do we
represent it in the diagram the way we do?
A: We trace back to the common root and merge files where we can.
We will need to ask about conflicting merges.

Q: What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
A: You might get oddly performing code if you automatically merge code.
